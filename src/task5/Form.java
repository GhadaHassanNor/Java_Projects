/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package task5;

/**
 *
 * @author MAGIC
 */
public class Form extends javax.swing.JFrame {

    /**
     * Creates new form Form
     */
    public Form() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        text = new javax.swing.JTextField();
        seven = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        plus = new javax.swing.JButton();
        four = new javax.swing.JButton();
        five = new javax.swing.JButton();
        six = new javax.swing.JButton();
        minus = new javax.swing.JButton();
        one = new javax.swing.JButton();
        two = new javax.swing.JButton();
        three = new javax.swing.JButton();
        multiply = new javax.swing.JButton();
        PorN = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        dot = new javax.swing.JButton();
        division = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        equal = new javax.swing.JButton();
        startP = new javax.swing.JButton();
        finishP = new javax.swing.JButton();

        jButton2.setText("jButton2");

        jButton12.setText("jButton12");

        jButton11.setText("jButton11");

        jButton10.setText("jButton10");

        jButton14.setText("jButton14");

        jButton13.setText("jButton13");

        jButton16.setText("jButton16");

        jButton24.setText("jButton24");

        jButton27.setText("jButton27");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        text.setEditable(false);
        text.setBackground(new java.awt.Color(204, 204, 204));
        text.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textActionPerformed(evt);
            }
        });

        seven.setText("7");
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });

        eight.setText("8");
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });

        nine.setText("9");
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });

        plus.setText("+");
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });

        four.setText("4");
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });

        five.setText("5");
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });

        six.setText("6");
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });

        minus.setText("-");
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });

        one.setText("1");
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });

        two.setText("2");
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });

        three.setText("3");
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });

        multiply.setText("X");
        multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyActionPerformed(evt);
            }
        });

        PorN.setText("-\\+");
        PorN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PorNActionPerformed(evt);
            }
        });

        zero.setText("0");
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });

        dot.setText(".");
        dot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dotActionPerformed(evt);
            }
        });

        division.setText("รท");
        division.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionActionPerformed(evt);
            }
        });

        clear.setText("clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        equal.setText("=");
        equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalActionPerformed(evt);
            }
        });

        startP.setText("(");
        startP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startPActionPerformed(evt);
            }
        });

        finishP.setText(")");
        finishP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(text)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(seven, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(one, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(four, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(PorN, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clear))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(startP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(zero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(eight, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(five, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(two, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 26, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(finishP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(three, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(six, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(plus, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(minus, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(multiply, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(division, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(equal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(text, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seven)
                    .addComponent(eight)
                    .addComponent(nine)
                    .addComponent(plus))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(four)
                    .addComponent(five)
                    .addComponent(six)
                    .addComponent(minus))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(one)
                    .addComponent(two)
                    .addComponent(three)
                    .addComponent(multiply))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PorN)
                    .addComponent(zero)
                    .addComponent(dot)
                    .addComponent(division))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clear)
                    .addComponent(equal)
                    .addComponent(startP, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(finishP, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PorNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PorNActionPerformed
        // TODO add your handling code here:
        String s = text.getText();
        String t = "";
        double d = 0;
        int a = 0;
        
        for(int i=1;i<s.length();i++){
            for(int z=0;z<s.length();z++){
                if("+".equals(s.substring(z, z+1))||"-".equals(s.substring(z, z+1))||"*".equals(s.substring(z, z+1))||"/".equals(s.substring(z, z+1))){
                    a = 1;
                    break;
                }
            }
            if(a==1)
                break;
            if(s.length()>1){
                    t = s.charAt(s.length()-(i+1)) + t;
                    d = Double.parseDouble(t);
                    d *= (-1);
                    a = 2;
            }
        }
        if(a!=2)
            text.setText(s);
        else
            text.setText(String.valueOf(d) + " ");
    }//GEN-LAST:event_PorNActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        text.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
        // TODO add your handling code here:
        String t = text.getText();
        boolean b = true;
        for(int i=0;i<10;i++){
            if(t.length()>1){
                if(t.substring(t.length()-2, t.length()-1).equals(String.valueOf(i))&&!t.substring(t.length()-1, t.length()).equals(".")){
                    t = t.substring(0, t.length()-1);
                    b = false;
                    String s = t + "1 ";
                    text.setText(s);
                    break;
                }
            }
        }
        if(b==true){
            String s = t + "1 ";
            text.setText(s);
        }
    }//GEN-LAST:event_oneActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
        // TODO add your handling code here:
        String t = text.getText();
        boolean b = true;
        for(int i=0;i<10;i++){
            if(t.length()>1){
                if(t.substring(t.length()-2, t.length()-1).equals(String.valueOf(i))&&!t.substring(t.length()-1, t.length()).equals(".")){
                    t = t.substring(0, t.length()-1);
                    b = false;
                    String s = t + "2 ";
                    text.setText(s);
                    break;
                }
            }
        }
        if(b==true){
            String s = t + "2 ";
            text.setText(s);
        }
    }//GEN-LAST:event_twoActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        // TODO add your handling code here:
        String t = text.getText();
        boolean b = true;
        for(int i=0;i<10;i++){
            if(t.length()>1){
                if(t.substring(t.length()-2, t.length()-1).equals(String.valueOf(i))&&!t.substring(t.length()-1, t.length()).equals(".")){
                    t = t.substring(0, t.length()-1);
                    b = false;
                    String s = t + "3 ";
                    text.setText(s);
                    break;
                }
            }
        }
        if(b==true){
            String s = t + "3 ";
            text.setText(s);
        }
    }//GEN-LAST:event_threeActionPerformed

    private void textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
        // TODO add your handling code here:
        String t = text.getText();
        boolean b = true;
        for(int i=0;i<10;i++){
            if(t.length()>1){
                if(t.substring(t.length()-2, t.length()-1).equals(String.valueOf(i))&&!t.substring(t.length()-1, t.length()).equals(".")){
                    t = t.substring(0, t.length()-1);
                    b = false;
                    String s = t + "4 ";
                    text.setText(s);
                    break;
                }
            }
        }
        if(b==true){
            String s = t + "4 ";
            text.setText(s);
        }
    }//GEN-LAST:event_fourActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
        // TODO add your handling code here:
        String t = text.getText();
        boolean b = true;
        for(int i=0;i<10;i++){
            if(t.length()>1){
                if(t.substring(t.length()-2, t.length()-1).equals(String.valueOf(i))&&!t.substring(t.length()-1, t.length()).equals(".")){
                    t = t.substring(0, t.length()-1);
                    b = false;
                    String s = t + "5 ";
                    text.setText(s);
                    break;
                }
            }
        }
        if(b==true){
            String s = t + "5 ";
            text.setText(s);
        }
    }//GEN-LAST:event_fiveActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
        // TODO add your handling code here:
        String t = text.getText();
        boolean b = true;
        for(int i=0;i<10;i++){
            if(t.length()>1){
                if(t.substring(t.length()-2, t.length()-1).equals(String.valueOf(i))&&!t.substring(t.length()-1, t.length()).equals(".")){
                    t = t.substring(0, t.length()-1);
                    b = false;
                    String s = t + "6 ";
                    text.setText(s);
                    break;
                }
            }
        }
        if(b==true){
            String s = t + "6 ";
            text.setText(s);
        }
    }//GEN-LAST:event_sixActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
        // TODO add your handling code here:
        String t = text.getText();
        boolean b = true;
        for(int i=0;i<10;i++){
            if(t.length()>1){    
                if(t.substring(t.length()-2, t.length()-1).equals(String.valueOf(i))&&!t.substring(t.length()-1, t.length()).equals(".")){
                    t = t.substring(0, t.length()-1);
                    b = false;
                    String s = t + "7 ";
                    text.setText(s);
                    break;
                }
            }
        }
        if(b==true){
            String s = t + "7 ";
            text.setText(s);
        }
    }//GEN-LAST:event_sevenActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
        // TODO add your handling code here:
        String t = text.getText();
        boolean b = true;
        for(int i=0;i<10;i++){
            if(t.length()>1){    
                if(t.substring(t.length()-2, t.length()-1).equals(String.valueOf(i))&&!t.substring(t.length()-1, t.length()).equals(".")){
                    t = t.substring(0, t.length()-1);
                    b = false;
                    String s = t + "8 ";
                    text.setText(s);
                    break;
                }
            }
        }
        if(b==true){
            String s = t + "8 ";
            text.setText(s);
        }
    }//GEN-LAST:event_eightActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
        // TODO add your handling code here:
        String t = text.getText();
        boolean b = true;
        for(int i=0;i<10;i++){
            if(t.length()>1){
                if(t.substring(t.length()-2, t.length()-1).equals(String.valueOf(i))&&!t.substring(t.length()-1, t.length()).equals(".")){
                    t = t.substring(0, t.length()-1);
                    b = false;
                    String s = t + "9 ";
                    text.setText(s);
                    break;
                }
            }
        }
        if(b==true){
            String s = t + "9 ";
            text.setText(s);
        }
    }//GEN-LAST:event_nineActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
        // TODO add your handling code here:
        String t = text.getText();
        boolean b = true;
        for(int i=0;i<10;i++){
            if(t.length()>1){
                if(t.substring(t.length()-2, t.length()-1).equals(String.valueOf(i))&&!t.substring(t.length()-1, t.length()).equals(".")){
                    t = t.substring(0, t.length()-1);
                    b = false;
                    String s = t + "0 ";
                    text.setText(s);
                    break;
                }
            }
        }
        if(b==true){
            String s = t + "0 ";
            text.setText(s);
        }
    }//GEN-LAST:event_zeroActionPerformed

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed
        // TODO add your handling code here:
        String s = text.getText() + "+ ";
        text.setText(s);
    }//GEN-LAST:event_plusActionPerformed

    private void dotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dotActionPerformed
        // TODO add your handling code here:
        String t = text.getText();
        boolean b = true;
        for(int i=0;i<10;i++){
            if(t.substring(t.length()-2, t.length()-1).equals(String.valueOf(i))){
                t = t.substring(0, t.length()-1);
                b = false;
                String s = t + ".";
                text.setText(s);
                break;
            }
        }
        if(b==true){
            String s = t + ".";
            text.setText(s);
        }
    }//GEN-LAST:event_dotActionPerformed

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusActionPerformed
        // TODO add your handling code here:
        String s = text.getText() + "- ";
        text.setText(s);
    }//GEN-LAST:event_minusActionPerformed

    private void multiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyActionPerformed
        // TODO add your handling code here:
        String s = text.getText() + "* ";
        text.setText(s);
    }//GEN-LAST:event_multiplyActionPerformed

    private void divisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionActionPerformed
        // TODO add your handling code here:
        String s = text.getText() + "/ ";
        text.setText(s);
    }//GEN-LAST:event_divisionActionPerformed

    private void equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalActionPerformed
        // TODO add your handling code here:
        String s = text.getText();
        String a = "";
        Stack t = new Stack();
        double result = 0;
        for(int i=0;i<s.length();i++){
            String o = "";
            while(i<s.length()&&s.charAt(i)!=' '){
                o += s.charAt(i);
                i++;
            }
            switch(o){
                case "+":{
                    if(t.isEmpty())
                        t.push(o);
                    else{
                        if("*".equals(t.top())){
                            while(t.top!=0)
                                a += t.pop() + " ";
                            t.push(o);
                        }
                        else if("/".equals(t.top())){
                            while(t.top!=0)
                                a += t.pop() + " ";
                            t.push(o);
                        }
                        else if("(".equals(t.top())){
                            t.push(o);
                        }
                        else if(")".equals(t.top())){
                            while(!"(".equals(t.top()))
                                a += t.pop() + " ";
                            t.pop();
                            while(t.top!=0)
                                a += t.pop() + " ";
                            t.push(o);
                        }
                        else if("-".equals(t.top())){
                            while(t.top!=0)
                                a += t.pop() + " ";
                            t.push(o);
                        }
                        else if("+".equals(t.top())){
                            while(t.top!=0)
                                a += t.pop() + " ";
                            t.push(o);
                        }
                    }
                    break;
                }
                case "-":{
                    if(t.isEmpty())
                        t.push(o);
                    else{
                        if("*".equals(t.top())){
                            while(t.top!=0)
                                a += t.pop() + " ";
                            t.push(o);
                        }
                        else if("/".equals(t.top())){
                            while(t.top!=0)
                                a += t.pop() + " ";
                            t.push(o);
                        }
                        else if("(".equals(t.top())){
                            t.push(o);
                        }
                        else if(")".equals(t.top())){
                            while(!"(".equals(t.top()))
                                a += t.pop() + " ";
                            t.pop();
                            while(t.top!=0)
                                a += t.pop() + " ";
                            t.push(o);
                        }
                        else if("-".equals(t.top())){
                            while(t.top!=0)
                                a += t.pop() + " ";
                            t.push(o);
                        }
                        else if("+".equals(t.top())){
                            while(t.top!=0)
                                a += t.pop() + " ";
                            t.push(o);
                        }
                    }
                    break;
                }
                case "*":{
                    if(t.isEmpty())
                        t.push(o);
                    else{
                        if("*".equals(t.top())){
                            while(t.top!=0)
                                a += t.pop() + " ";
                            t.push(o);
                        }
                        else if("/".equals(t.top())){
                            while(t.top!=0)
                                a += t.pop() + " ";
                            t.push(o);
                        }
                        else if("(".equals(t.top())){
                            t.push(o);
                        }
                        else if(")".equals(t.top())){
                            while(!"(".equals(t.top()))
                                a += t.pop() + " ";
                            t.pop();
                            while(t.top!=0)
                                a += t.pop() + " ";
                            t.push(o);
                        }
                        else if("-".equals(t.top())){
                            t.push(o);
                        }
                        else if("+".equals(t.top())){
                            t.push(o);
                        }
                    }
                    break;
                }
                case "/":{
                    if(t.isEmpty())
                        t.push(o);
                    else{
                        if("*".equals(t.top())){
                            while(t.top!=0)
                                a += t.pop() + " ";
                            t.push(o);
                        }
                        else if("/".equals(t.top())){
                            while(t.top!=0)
                                a += t.pop() + " ";
                            t.push(o);
                        }
                        else if("(".equals(t.top())){
                            t.push(o);
                        }
                        else if(")".equals(t.top())){
                            while(!"(".equals(t.top()))
                                a += t.pop() + " ";
                            t.pop();
                            while(t.top!=0)
                                a += t.pop() + " ";
                            t.push(o);
                        }
                        else if("-".equals(t.top())){
                            t.push(o);
                        }
                        else if("+".equals(t.top())){
                            t.push(o);
                        }
                    }
                    break;
                }
                case "(":{
                    t.push(o);
                    break;
                }
                case ")":{
                    while(!"(".equals(t.top()))
                        a += t.pop() + " ";
                    t.pop();
                    if("*".equals(t.top())){
                            while(t.top!=0)
                                a += t.pop() + " ";
                        }
                        else if("/".equals(t.top())){
                            while(t.top!=0)
                                a += t.pop() + " ";
                        }
                        else if("-".equals(t.top())){
                            while(t.top!=0)
                                a += t.pop() + " ";
                        }
                        else if("+".equals(t.top())){
                            while(t.top!=0)
                                a += t.pop() + " ";
                        }
                    break;
                }
                default:
                    a += o + " ";
                    break;
            }
        }
        while(t.top!=0){
            a += t.pop() + " ";
        }
        for(int i=0;i<a.length();i++){
            s = "";
            while(i<a.length()&&a.charAt(i)!=' '){
                s += a.charAt(i);
                i++;
            }
            switch(s){
                case "*":{
                    double x = (double) t.pop();
                    double y = (double) t.pop();
                    result = y * x;
                    t.push(result);
                    break;
                }
                case "/":{
                    double x = (double) t.pop();
                    double y = (double) t.pop();
                    result = y / x;
                    t.push(result);
                    break;
                }
                case "-":{
                    double x = (double) t.pop();
                    double y = (double) t.pop();
                    result = y - x;
                    t.push(result);
                    break;
                }
                case "+":{
                    double x = (double) t.pop();
                    double y = (double) t.pop();
                    result = y + x;
                    t.push(result);
                    break;
                }
                default:{
                    double g = Double.parseDouble(s);
                    t.push(g);
                    break;
                }
            }
        }
        text.setText(String.valueOf(result) + " ");
    }//GEN-LAST:event_equalActionPerformed

    private void startPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startPActionPerformed
        // TODO add your handling code here:
        String s = text.getText() + "( ";
        text.setText(s);
    }//GEN-LAST:event_startPActionPerformed

    private void finishPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishPActionPerformed
        // TODO add your handling code here:
        String s = text.getText() + ") ";
        text.setText(s);
    }//GEN-LAST:event_finishPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton PorN;
    private javax.swing.JButton clear;
    private javax.swing.JButton division;
    private javax.swing.JButton dot;
    private javax.swing.JButton eight;
    private javax.swing.JButton equal;
    private javax.swing.JButton finishP;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton minus;
    private javax.swing.JButton multiply;
    private javax.swing.JButton nine;
    private javax.swing.JButton one;
    private javax.swing.JButton plus;
    private javax.swing.JButton seven;
    private javax.swing.JButton six;
    private javax.swing.JButton startP;
    private javax.swing.JTextField text;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
